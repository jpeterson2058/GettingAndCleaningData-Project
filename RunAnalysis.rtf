{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #Set path.\
\
setwd(getwd()) # Please set directory as required\
path <- getwd()\
path\
\
\
\
#Get the data\
\
\
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"\
f <- "Dataset.zip"\
if (!file.exists(path)) \{dir.create(path)\}\
download.file(url, file.path(path, f))\
\
\
#Unzip the file.\
\
executable <- file.path("C:", "Program Files (x86)", "7-Zip", "7z.exe")\
parameters <- "x"\
cmd <- paste(paste0("\\"", executable, "\\""), parameters, paste0("\\"", file.path(path, f), "\\""))\
system(cmd)\
\
#The archive put the files in a folder named `UCI HAR Dataset`. Set this folder as the input path. List the files here.\
\
pathIn <- file.path(path, "UCI HAR Dataset")\
list.files(pathIn, recursive=TRUE)\
\
\
#Read the files\
\
dtSubjectTrain <- fread(file.path(pathIn, "train", "subject_train.txt"))\
dtSubjectTest  <- fread(file.path(pathIn, "test" , "subject_test.txt" ))\
\
\
#Read the activity files. For some reason, these are called *label* files in the `README.txt` documentation.\
\
dtActivityTrain <- fread(file.path(pathIn, "train", "Y_train.txt"))\
dtActivityTest  <- fread(file.path(pathIn, "test" , "Y_test.txt" ))\
\
\
#Read the data files. `fread` seems to be giving me some trouble reading files. Using a helper function, read the file with `read.table` instead, then convert the resulting data frame to a data table. Return the data table.\
\
fileToDataTable <- function (f) \{\
  df <- read.table(f)\
  dt <- data.table(df)\
\}\
dtTrain <- fileToDataTable(file.path(pathIn, "train", "X_train.txt"))\
dtTest  <- fileToDataTable(file.path(pathIn, "test" , "X_test.txt" ))\
\
\
\
#Merge the training and the test sets\
\
\
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)\
setnames(dtSubject, "V1", "subject")\
dtActivity <- rbind(dtActivityTrain, dtActivityTest)\
setnames(dtActivity, "V1", "activityNum")\
dt <- rbind(dtTrain, dtTest)\
\
\
#Merge columns.\
\
dtSubject <- cbind(dtSubject, dtActivity)\
dt <- cbind(dtSubject, dt)\
\
setkey(dt, subject, activityNum)\
\
\
\
#Extract only the mean and standard deviation\
\
\
dtFeatures <- fread(file.path(pathIn, "features.txt"))\
setnames(dtFeatures, names(dtFeatures), c("featureNum", "featureName"))\
\
dtFeatures <- dtFeatures[grepl("mean\\\\(\\\\)|std\\\\(\\\\)", featureName)]\
\
dtFeatures$featureCode <- dtFeatures[, paste0("V", featureNum)]\
head(dtFeatures)\
dtFeatures$featureCode\
\
\
#Subset these variables using variable names.\
\
select <- c(key(dt), dtFeatures$featureCode)\
dt <- dt[, select, with=FALSE]\
\
#Use descriptive activity names\
\
dtActivityNames <- fread(file.path(pathIn, "activity_labels.txt"))\
setnames(dtActivityNames, names(dtActivityNames), c("activityNum", "activityName"))\
\
\
\
#Label with descriptive activity names\
\
dt <- merge(dt, dtActivityNames, by="activityNum", all.x=TRUE)\
setkey(dt, subject, activityNum, activityName)\
\
dt <- data.table(melt(dt, key(dt), variable.name="featureCode"))\
\
\
#Merge activity name.\
\
dt <- merge(dt, dtFeatures[, list(featureNum, featureCode, featureName)], by="featureCode", all.x=TRUE)\
\
dt$activity <- factor(dt$activityName)\
dt$feature <- factor(dt$featureName)\
\
grepthis <- function (regex) \{\
  grepl(regex, dt$feature)\
\}\
## Features with 2 categories\
n <- 2\
y <- matrix(seq(1, n), nrow=n)\
x <- matrix(c(grepthis("^t"), grepthis("^f")), ncol=nrow(y))\
dt$featDomain <- factor(x %*% y, labels=c("Time", "Freq"))\
x <- matrix(c(grepthis("Acc"), grepthis("Gyro")), ncol=nrow(y))\
dt$featInstrument <- factor(x %*% y, labels=c("Accelerometer", "Gyroscope"))\
x <- matrix(c(grepthis("BodyAcc"), grepthis("GravityAcc")), ncol=nrow(y))\
dt$featAcceleration <- factor(x %*% y, labels=c(NA, "Body", "Gravity"))\
x <- matrix(c(grepthis("mean()"), grepthis("std()")), ncol=nrow(y))\
dt$featVariable <- factor(x %*% y, labels=c("Mean", "SD"))\
## Features with 1 category\
dt$featJerk <- factor(grepthis("Jerk"), labels=c(NA, "Jerk"))\
dt$featMagnitude <- factor(grepthis("Mag"), labels=c(NA, "Magnitude"))\
## Features with 3 categories\
n <- 3\
y <- matrix(seq(1, n), nrow=n)\
x <- matrix(c(grepthis("-X"), grepthis("-Y"), grepthis("-Z")), ncol=nrow(y))\
dt$featAxis <- factor(x %*% y, labels=c(NA, "X", "Y", "Z"))\
\
r1 <- nrow(dt[, .N, by=c("feature")])\
r2 <- nrow(dt[, .N, by=c("featDomain", "featAcceleration", "featInstrument", "featJerk", "featMagnitude", "featVariable", "featAxis")])\
r1 == r2\
\
\
#Create a tidy data set\
\
setkey(dt, subject, activity, featDomain, featAcceleration, featInstrument, featJerk, featMagnitude, featVariable, featAxis)\
dtTidy <- dt[, list(count = .N, average = mean(value)), by=key(dt)]\
dtTidy\
\
#Make codebook.\
\
knit("makeCodebook", output = "codebook.md", encoding = "ISO8859-1", quiet = TRUE)\
markdownToHTML("codebook.md", "codebook.html")\
\
\
\
\
\
\
str(dtTidy)\
\
key(dtTidy)\
\
dtTidy\
\
summary(dtTidy)\
\
dtTidy[, .N, by=c(names(dtTidy)[grep(("^feat", names(dtTidy))])]\
\
f<- file.path(path, "DatasetHumanActivityRecognitionUsingSmartphones.txt")\
write.table(dtTidy, f, quote = FALSE, sep = "\\t", row.names = FALSE)\
\
\
\
}